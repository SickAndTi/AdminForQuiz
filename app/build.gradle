apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.user.adminforquiz"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        if (rootProject.file("config/config.properties").exists()) {
            def properties = new Properties()
            properties.load(new FileInputStream(rootProject.file("config/config.properties")))

            //vps api
            buildConfigField('String', 'VPS_API_URL', '"' + properties.get("vpsApiUrl") + '"')
            buildConfigField('String', 'TEST_API_URL', '"' + properties.get("testApiUrl") + '"')

            //quiz api auth
            buildConfigField('String', 'USER', '"' + properties.get("user") + '"')
            buildConfigField('String', 'CLIENT_ID', '"' + properties.get("clientId") + '"')
            buildConfigField('String', 'PASSWORD', '"' + properties.get("password") + '"')
            buildConfigField('String', 'CLIENT_SECRET', '"' + properties.get("clientSecret") + '"')
            buildConfigField('String', 'GRANT_TYPE', '"' + properties.get("grantType") + '"')
            buildConfigField('String', 'GRANT_TYPE_REFRESH_TOKEN', '"' + properties.get("refreshTokenGrantType") + '"')

        } else {
            throw new GradleException(
                    "You need to have projectRoot/config/config.properties file with "
                            + "vpsApiUrl,"
                            + " to build project"
            )
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    //CardView
    implementation 'com.android.support:cardview-v7:28.0.0'
    // logs
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //DI
    implementation 'com.github.stephanenicolas.toothpick:toothpick-runtime:1.1.3'
    implementation 'com.github.stephanenicolas.toothpick:smoothie:1.1.3'
    annotationProcessor 'com.github.stephanenicolas.toothpick:toothpick-compiler:1.1.3'
    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    //glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    //MVP
    implementation 'com.arello-mobile:moxy:1.5.5'
    annotationProcessor 'com.arello-mobile:moxy-compiler:1.5.5'
    implementation 'com.arello-mobile:moxy-app-compat:1.5.5'
    //okhttp + retrofit
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    //room DB
    implementation "android.arch.persistence.room:runtime:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //Navigation
    implementation 'ru.terrakok.cicerone:cicerone:3.0.0'
    //views
    implementation 'com.google.android:flexbox:1.0.0'
    implementation 'jp.wasabeef:blurry:2.1.1'

}
repositories {
    mavenCentral()
}
